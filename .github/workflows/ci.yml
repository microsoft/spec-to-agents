name: CI

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"
    
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: GIT_LFS_SKIP_SMUDGE=1 uv sync --dev
    
    - name: Run linting with ruff
      run: uv run ruff check .
    
    - name: Run formatting check with ruff
      run: uv run ruff format --check .
    
    #- name: Run type checking with mypy
    #  run: uv run mypy .
    
    - name: Run tests with pytest and coverage
      run: uv run pytest --verbose --cov=src/spec_to_agents --cov-report=xml --cov-report=html
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      if: matrix.python-version == '3.11'
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.python-version }}
        path: |
          coverage.xml
          htmlcov/
        retention-days: 30

  security:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v4
      with:
        version: "latest"
    
    - name: Set up Python
      run: uv python install 3.11
    
    - name: Install dependencies
      run: GIT_LFS_SKIP_SMUDGE=1 uv sync --dev
    
    - name: Run security audit
      run: uv run pip-audit --desc
      continue-on-error: true